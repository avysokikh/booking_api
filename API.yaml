openapi: 3.0.0
info:
  title: Hotel Booking API
  version: 1.0.0
  description: RESTful API для системы бронирования гостиничных номеров

servers:
  - url: http://localhost:8000/api
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john@example.com
        created_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"

    Room:
      type: object
      properties:
        id:
          type: integer
          example: 1
        number:
          type: string
          example: "101"
        type:
          type: string
          example: standard
        price_per_night:
          type: number
          format: float
          example: 100.00
        capacity:
          type: integer
          example: 2
        description:
          type: string
          example: Comfortable standard room
        is_available:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"

    Booking:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user:
          $ref: '#/components/schemas/User'
        room:
          $ref: '#/components/schemas/Room'
        check_in_date:
          type: string
          format: date
          example: "2025-06-15"
        check_out_date:
          type: string
          format: date
          example: "2025-06-20"
        total_price:
          type: number
          format: float
          example: 500.00
        status:
          type: string
          enum: [confirmed, cancelled]
          example: confirmed
        created_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00.000000Z"

paths:
  /rooms:
    get:
      summary: List available rooms
      tags: [Rooms]
      parameters:
        - name: check_in_date
          in: query
          required: false
          schema:
            type: string
            format: date
            example: "2025-06-15"
        - name: check_out_date
          in: query
          required: false
          schema:
            type: string
            format: date
            example: "2025-06-20"
      responses:
        '200':
          description: List of available rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 2

  /login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                    example: "2|abcdef123456..."
                  token_type:
                    type: string
                    example: Bearer

  /logout:
    post:
      summary: Logout user
      tags: [Authentication]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out

  /bookings:
    post:
      summary: Create a new booking
      tags: [Bookings]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - room_id
                - check_in_date
                - check_out_date
              properties:
                room_id:
                  type: integer
                  example: 1
                check_in_date:
                  type: string
                  format: date
                  example: "2025-06-15"
                check_out_date:
                  type: string
                  format: date
                  example: "2025-06-20"
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking' 